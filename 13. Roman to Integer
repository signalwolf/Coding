# first create the roman to val map, 
# goes from left to right, cover the roman to integer, then check if s[i] < s[i+1], then it should be minus, 
# otherwise, it shall be postive. 
# add all those number together, it is the answer
# Infors: roman to digital:         ROMAN = {'I': 1,'V': 5,'X': 10,'L': 50,'C': 100,'D': 500,'M': 1000}
# run time: 179ms, 21%; 112ms, 96%; 132ms, 77%; I think due to using the dict, so the time have some variation
class Solution(object):
    
    def romanToInt(self, s):
        """
        :type s: str
        :rtype: int
        """
        ROMAN = {'I': 1,'V': 5,'X': 10,'L': 50,'C': 100,'D': 500,'M': 1000}
        result = 0
        for index in xrange(len(s) - 1):
            if index == 0:
                curr, nextv = ROMAN[s[index]], ROMAN[s[index + 1]]    
            else:
                curr = nextv
                nextv = ROMAN[s[index + 1]]
            if curr >= nextv:
                result += curr
            else:
                result -= curr
        result = result + ROMAN[s[-1]]
        return result
