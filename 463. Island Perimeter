# 16:08 -- 16:55:
# run timeï¼š 385ms, 32%; 235ms, 94%; 236ms, 93% 
class Solution(object):
    def islandPerimeter(self, grid):
        """
        :type grid: List[List[int]]
        :rtype: int
        """
        if grid == []:
            return 0
        result = 0
        row, column = len(grid), len(grid[0])
        i, j = 1, 1
        # initial original point
        if grid[0][0] == 1:
            result += 2
        # initial first row: 
        while j < column:
            if grid [0][j] == 1:
                result += 2 - grid[0][j - 1]
            else:
                result += grid[0][j - 1]
            j += 1
        while i < row:
            if grid [i][0] == 1:
                result += 2 - grid[i -1][0]
            else:
                result += grid[i - 1][0]
            i += 1
        for i in xrange(1, row):
            for j in xrange(1, column):
                if grid[i][j] == 1:
                    result += 2 - grid[i][j - 1] - grid[i -1][j]
                else:
                    result += grid[i -1][j] + grid[i][j - 1]
        result += sum (grid[-1])
        for i in grid:
            result += i[-1]
        return result
