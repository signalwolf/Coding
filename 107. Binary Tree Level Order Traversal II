# Definition for a binary tree node.
# class TreeNode(object):
#     def __init__(self, x):
#         self.val = x
#         self.left = None
#         self.right = None

class Solution(object):
    # recursion can't solve this problem since the recursion method is basically top down not goes to same level
    # code time: 11:49 to 12:14: 25 mins 
    # run time: 49ms, 62%; 58ms, 35%; 46ms, 79%/ 
    def levelOrderBottom(self, root):
        if root == None:
            return []
        queue = [root]
        result = []
        length = 1
        while length != 0:
            temp = []
            while length > 0:
                curr = queue.pop(0)
                temp.append (curr.val)
                if curr.left != None:
                    queue.append(curr.left)
                if curr.right != None:
                    queue.append (curr.right)
                length -= 1
            result = [temp] + result
            length = len(queue)
        return result
